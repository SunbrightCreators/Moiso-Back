version: "3"
services:
  # Django 웹 애플리케이션을 실행
  web:
    container_name: web
    build:
      context: ./
      dockerfile: Dockerfile.prod # Dockerfile.prod 를 사용해 이미지를 빌드
    # Gunicorn으로 Django 실행
    command:
      - gunicorn
      - configs.wsgi:application
      - --bind
      - 0.0.0.0:8000
      - --access-logfile
      - "-"
      - --error-logfile
      - "-"
      - --log-level
      - info
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: configs.settings.production
      TZ: "Asia/Seoul"
    volumes:
      - static:/home/app/web/static
      - media:/home/app/web/media
    expose:
      - "8000"
    # 컨테이너 시작 시 엔트리포인트 스크립트 실행
    entrypoint: ["/home/app/web/entrypoint.prod.sh"] # ← Dockerfile의 COPY 경로와 일치시키기
    restart: unless-stopped
    networks: [appnet]

  # Nginx 리버스 프록시
  nginx:
    container_name: nginx
    build:
      context: ./configs/nginx
      dockerfile: Dockerfile
    volumes:
      - static:/home/app/web/static
      - media:/home/app/web/media
      - ./configs/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - web
    environment:
      TZ: "Asia/Seoul"
    restart: unless-stopped
    networks: [appnet]

volumes:
  static:
  media:

networks:
  appnet:
    driver: bridge
